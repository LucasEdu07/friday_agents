# docker-compose.yml  (sem "version", ok)
services:

  db:
    image: postgres:16
    container_name: sextinha-db
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=friday_agents
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d friday_agents"]
      interval: 5s
      timeout: 3s
      retries: 10

  text:
    build:
      context: .
      dockerfile: services/sextinha_text_api/Dockerfile
    image: sextinha-text:dev
    container_name: sextinha-text
    environment:
      # üëâ aponta para o servi√ßo interno "db"
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/friday_agents
    ports:
      - "${TEXT_PORT:-8081}:8000"
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "python", "-c", "import socket,sys;s=socket.create_connection(('127.0.0.1',8000),2);s.close()" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  vision:
    build:
      context: .
      dockerfile: services/sextinha_vision_api/Dockerfile
    image: sextinha-vision:dev
    container_name: sextinha-vision
    environment:
      - PYTHONPATH=/app
    ports:
      - "${VISION_PORT:-8001}:8001"
    restart: unless-stopped
    depends_on:
      text:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8001/readiness || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s

networks:
  default:
    name: sextinha-net

# üîß AQUI EST√Å O QUE FALTAVA
volumes:
  pgdata:
